-- vim.keymap.set("n", "<F5>", ":lua require'dap'.continue()<CR>")
-- vim.keymap.set("n", "<F10>", ":lua require'dap'.step_over()<CR>")
-- vim.keymap.set("n", "<F11>", ":lua require'dap'.step_into()<CR>")
-- vim.keymap.set("n", "<F12>", ":lua require'dap'.step_out()<CR>")
-- vim.keymap.set("n", "<leader>b", ":lua require'dap'.toggle_breakpoint()<CR>")
-- vim.keymap.set("n", "<leader>B", ":lua require'dap'.set_breakpoint(vim.fn.input('Breakpoint condition: '))<CR>")
-- vim.keymap.set("n", "<leader>lp", ":lua require'dap'.set_breakpoint(nil, nil, vim.fn.input('Log point message: '))<CR>")
-- vim.keymap.set("n", "<leader>dr", ":lua require'dap'.repl.open()<CR>")
--
-- require('dapui').setup()
-- vim.keymap.set("n", "<leader>du", ":lua require'dapui'.toggle()<CR>")
--
-- require("dap-vscode-js").setup({
--   node_path = os.getenv('HOME') .. '/.nvm/versions/node/v18.2.0/bin/node', -- Path of node executable. Defaults to $NODE_PATH, and then "node"
--   -- debugger_path = "(runtimedir)/site/pack/packer/opt/vscode-js-debug", -- Path to vscode-js-debug installation.
--   -- debugger_path = os.getenv('HOME') .. "/.local/share/nvim/site/pack/packer/opt/vscode-js-debug", -- Path to vscode-js-debug installation.
--   debugger_path = vim.fn.stdpath('data') .. '/mason/packages/js-debug-adapter', -- Path to vscode-js-debug installation.
--   debugger_cmd = { "js-debug-adapter" }, -- Command to use to launch the debug server. Takes precedence over `node_path` and `debugger_path`.
--   adapters = { 'pwa-node', 'pwa-chrome', 'pwa-msedge', 'node-terminal', 'pwa-extensionHost' }, -- which adapters to register in nvim-dap
--   -- log_file_path = "(stdpath cache)/dap_vscode_js.log" -- Path for file logging
--   -- log_file_level = false -- Logging level for output to file. Set to false to disable file logging.
--   -- log_console_level = vim.log.levels.ERROR -- Logging level for output to console. Set to false to disable console output.
-- })
--
-- -- local dap = require('dap')
--
-- -- custom adapter for running tasks before starting debug
-- -- local custom_adapter = 'pwa-node-custom'
-- -- dap.adapters[custom_adapter] = function(cb, config)
-- --   if config.preLaunchTask then
-- --     local async = require('plenary.async')
-- --     local notify = require('notify').async
-- --
-- --     async.run(function()
-- --       ---@diagnostic disable-next-line: missing-parameter
-- --       notify('Running [' .. config.preLaunchTask .. ']').events.close()
-- --     end, function()
-- --       vim.fn.system(config.preLaunchTask)
-- --       config.type = 'pwa-node'
-- --       dap.run(config)
-- --     end)
-- --   end
-- -- end
--
-- for _, language in ipairs({ "typescript", "javascript" }) do
--   require("dap").configurations[language] = {
--     {
--       name = 'Launch',
--       type = 'pwa-node',
--       request = 'launch',
--       program = '${file}',
--       rootPath = '${workspaceFolder}',
--       cwd = '${workspaceFolder}',
--       sourceMaps = true,
--       skipFiles = { '<node_internals>/**' },
--       protocol = 'inspector',
--       console = 'integratedTerminal',
--       port = 3000
--     },
--     {
--       name = 'Attach to node process',
--       type = 'pwa-node',
--       request = 'attach',
--       rootPath = '${workspaceFolder}',
--       processId = require('dap.utils').pick_process,
--       port = 3000
--     },
--   }
-- end
--
-- -- require("dap").adapters["pwa-node"] = {
-- --   type = "server",
-- --   host = "localhost",
-- --   port = "${port}",
-- --   executable = {
-- --     command = "node",
-- --     -- ðŸ’€ Make sure to update this path to point to your installation
-- --     args = { os.getenv('HOME') .. "/.local/share/nvim/site/pack/packer/opt/vscode-js-debug", "${port}" },
-- --   }
-- -- }
--
-- -- How to start debugging
-- -- leader b - set breakpoint
-- -- dap-adapter.debug_test()
-- -- :lua require'dapui'.open()
